"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7818],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,h=d["".concat(c,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4172:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>c,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>u});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],l={id:"ble_how_to_communicate",title:"Function usage",sidebar_label:"Function usage"},c=void 0,s={unversionedId:"ble_how_to_communicate",id:"version-2.3.0/ble_how_to_communicate",isDocsHomePage:!1,title:"Function usage",description:"The functions of the cube can be obtained and controlled by using characteristics. Each characteristic supports one of the Write, Read, or Notify properties, and can be used in the following ways.",source:"@site/i18n/en/docusaurus-plugin-content-docs/version-2.3.0/how_to_communicate.md",sourceDirName:".",slug:"/ble_how_to_communicate",permalink:"/toio-spec/en/docs/ble_how_to_communicate",tags:[],version:"2.3.0",frontMatter:{id:"ble_how_to_communicate",title:"Function usage",sidebar_label:"Function usage"},sidebar:"version-2.3.0/docs",previous:{title:"\ud83d\udd04 Communication Overview",permalink:"/toio-spec/en/docs/ble_communication_overview"},next:{title:"Identification sensor",permalink:"/toio-spec/en/docs/ble_id"}},u=[{value:"Data structures",id:"data-structures",children:[]},{value:"Write operation errors",id:"write-operation-errors",children:[]}],p={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The functions of the cube can be obtained and controlled by using characteristics. Each characteristic supports one of the Write, Read, or Notify properties, and can be used in the following ways."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Properties"),(0,o.kt)("th",{parentName:"tr",align:null},"How to use"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Write"),(0,o.kt)("td",{parentName:"tr",align:null},"Writes data to a characteristic, and controls the cube according to the data content.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Read"),(0,o.kt)("td",{parentName:"tr",align:null},"Reads data from a characteristic to obtain information about the cube contained in the data.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Notify"),(0,o.kt)("td",{parentName:"tr",align:null},'Received whenever information that can be retrieved by "reading" data is changed by "notifications".')))),(0,o.kt)("h2",{id:"data-structures"},"Data structures"),(0,o.kt)("p",null,'The structure of the data to which "Write", "Read", and "Notify" operations are applied is explained in the following pages.'),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Data location"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Content"),(0,o.kt)("th",{parentName:"tr",align:null},"Example")))),(0,o.kt)("h4",{id:"data-location"},"Data location"),(0,o.kt)("p",null,"The location of data in buffers starting with 0."),(0,o.kt)("h4",{id:"type"},"Type"),(0,o.kt)("p",null,"The type of data, such as ",(0,o.kt)("inlineCode",{parentName:"p"},"UInt8")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"String"),". All byte orders are ",(0,o.kt)("strong",{parentName:"p"},"little endian"),"."),(0,o.kt)("h4",{id:"content"},"Content"),(0,o.kt)("p",null,"Indicates the content of the data in words."),(0,o.kt)("h4",{id:"example"},"Example"),(0,o.kt)("p",null,"A concrete example is given in the following manner."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("span",{class:"fixed"},(0,o.kt)("code",null,"0x00")),": Fixed data (only the indicated value is valid or exists)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"0x00"),": An example of non-fixed data")),(0,o.kt)("h2",{id:"write-operation-errors"},"Write operation errors"),(0,o.kt)("p",null,"For write operations, the following cases are determined errors.\nWhen there is an error, the write operation is discarded and does not affect the operation of the cube."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"When the full data length is different from the specified length"),(0,o.kt)("li",{parentName:"ul"},"When the data value is out side the specified range")),(0,o.kt)("p",null,"If there are other cases of errors, they are listed as notes for each characteristic."))}d.isMDXComponent=!0}}]);